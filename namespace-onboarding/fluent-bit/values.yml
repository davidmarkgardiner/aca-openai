---
kind: DaemonSet
replicaCount: 1
image:
  repository: cr.fluentbit.io/fluent/fluent-bit
  tag: null
  digest: null
  pullPolicy: IfNotPresent
testFramework:
  enabled: true
  namespace: null
  image:
    repository: busybox
    pullPolicy: Always
    tag: latest
    digest: null
imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""
serviceAccount:
  create: true
  annotations: {}
  name: null
rbac:
  create: true
  nodeAccess: false
  eventsAccess: false
podSecurityPolicy:
  create: false
  annotations: {}
openShift:
  enabled: false
  securityContextConstraints:
    create: true
    name: ""
    annotations: {}
    existingName: ""
podSecurityContext: {}
hostNetwork: false
dnsPolicy: ClusterFirst
dnsConfig: {}
hostAliases: []
securityContext: {}
service:
  type: ClusterIP
  port: 2020
  internalTrafficPolicy: null
  loadBalancerClass: null
  loadBalancerSourceRanges: []
  labels: {}
  annotations: {}
  externalIPs: []
serviceMonitor:
  enabled: false
  additionalEndpoints: []
prometheusRule:
  enabled: false
dashboards:
  enabled: false
  labelKey: grafana_dashboard
  labelValue: 1
  annotations: {}
  namespace: ""
lifecycle: {}
livenessProbe:
  httpGet:
    path: /
    port: http
readinessProbe:
  httpGet:
    path: /api/v1/health
    port: http
resources: {}
ingress:
  enabled: false
  ingressClassName: ""
  annotations: {}
  hosts: []
  extraHosts: []
  tls: []
autoscaling:
  vpa:
    enabled: false
    annotations: {}
    controlledResources: []
    maxAllowed: {}
    minAllowed: {}
    updatePolicy:
      updateMode: Auto
  enabled: false
  minReplicas: 1
  maxReplicas: 3
  targetCPUUtilizationPercentage: 75
  customRules: []
  behavior: {}
podDisruptionBudget:
  enabled: false
  annotations: {}
  maxUnavailable: 30%
nodeSelector: {}
tolerations: []
affinity: {}
labels: {}
annotations: {}
podAnnotations: {}
podLabels: {}
minReadySeconds: null
terminationGracePeriodSeconds: null
priorityClassName: ""
env: []
envWithTpl: []
envFrom: []
extraContainers: []
flush: 1
metricsPort: 2020
extraPorts: []
extraVolumes: []
extraVolumeMounts: []
updateStrategy: {}
existingConfigMap: ""
networkPolicy:
  enabled: false
luaScripts: {}
config:
  service: |
    [SERVICE]
        Daemon Off
        Flush 1
        Log_Level trace
        HTTP_Server On
        HTTP_Listen 0.0.0.0
        HTTP_Port 2020
        Health_Check On

  inputs: |
    [INPUT]
        Name tail
        Path /var/log/containers/*.log
        multiline.parser docker, cri
        Tag kube.*
        Mem_Buf_Limit 1MB
        Skip_Long_Lines On
        Refresh_Interval 10

  filters: |
    [FILTER]
        Name kubernetes
        Match kube.*
        Merge_Log On
        Merge_Log_key log_processed
        K8S-Logging.Parser On
        K8S-Logging.Exclude Off
  outputs: |
    [OUTPUT]
        Name azure_kusto
        Match *
        Tenant_Id <>
        Client_Id <>
        Client_Secret <>
        Ingestion_Endpoint <>
        Database_Name <>
        Table_Name <>
      
  upstream: {}
  customParsers: |
    [PARSER]
        Name docker_no_time
        Format json
        Time_Keep Off
        Time_Key time
        Time_Format %Y-%m-%dT%H:%M:%S.%L
  extraFiles: {}
volumeMounts:
  - name: config
    mountPath: /fluent-bit/etc/conf
daemonSetVolumes:
  - name: varlog
    hostPath:
      path: /var/log
  - name: varlibdockercontainers
    hostPath:
      path: /var/lib/docker/containers
  - name: etcmachineid
    hostPath:
      path: /etc/machine-id
      type: File
daemonSetVolumeMounts:
  - name: varlog
    mountPath: /var/log
  - name: varlibdockercontainers
    mountPath: /var/lib/docker/containers
    readOnly: true
  - name: etcmachineid
    mountPath: /etc/machine-id
    readOnly: true
command:
  - /fluent-bit/bin/fluent-bit
args:
  - --workdir=/fluent-bit/etc
  - --config=/fluent-bit/etc/conf/fluent-bit.conf
initContainers: []
logLevel: info
hotReload:
  enabled: false
  image:
    repository: ghcr.io/jimmidyson/configmap-reload
    tag: v0.11.1
    digest: null
    pullPolicy: IfNotPresent
  resources: {}
