---
apiVersion: containerservice.azure.com/v1api20231102preview
kind: ManagedCluster
metadata:
  name: ${CLUSTER_NAME}
  namespace: ${NAMESPACE}
spec:
  serviceMeshProfile:
    istio:
      components:
        ingressGateways:
        - enabled: ${ISTIO_INGRESS_GATEWAY_INTERNAL_ENABLED}
          mode: Internal
        - enabled: ${ISTIO_INGRESS_GATEWAY_EXTERNAL_ENABLED}
          mode: External
      revisions:
      - ${ISTIO_REVISION_STABLE}
      # - ${ISTIO_REVISION_CANARY}
    mode: Istio
  diskEncryptionSetReference:
    armId: ${DISK_ENCRYPTION_SET_ID}
  aadProfile:
    enableAzureRBAC: true
    managed: true
    tenantID: ${TENANT_ID}
    adminGroupObjectIDs:
      - ${ADMIN_GROUP_OBJECT_ID}
  addonProfiles:
    azureKeyvaultSecretsProvider:
      config:
        enableSecretRotation: "false"
        rotationPollInterval: 2m
      enabled: true
    azurepolicy:
      enabled: true
    omsAgent:
      config:
        logAnalyticsWorkspaceResourceID: ${LOG_ANALYTICS_WORKSPACE_ID}
        useAADAuth: "true"
      enabled: true
  agentPoolProfiles:
  - availabilityZones:
    - "1"
    - "2"
    - "3"
    count: ${SYS_COUNT}
    enableAutoScaling: true
    enableFIPS: false
    enableNodePublicIP: false
    kubeletDiskType: OS
    maxCount: ${SYS_MAX_COUNT}
    maxPods: ${SYS_MAX_PODS}
    minCount: ${SYS_MIN_COUNT}
    mode: System
    name: ${SYSTEM_POOL_NAME1}
    nodeTaints:
    - CriticalAddonsOnly=true:NoSchedule
    orchestratorVersion: "${AKS_VERSION}"
    osDiskSizeGB: ${OS_DISK_SIZE}
    osDiskType: Managed
    osSKU: ${OS_SKU}
    osType: ${OS_TYPE}
    enableCustomCATrust: ${ENABLE_CUSTOM_CA_TRUST}
    # powerState:
    #   code: Running
    # type: VirtualMachineScaleSets
    upgradeSettings:
      maxSurge: 10%
    vmSize: ${VM_SIZE}
  - availabilityZones:
    - "1"
    - "2"
    - "3"
    count: ${USR_COUNT}
    enableAutoScaling: true
    enableFIPS: false
    enableNodePublicIP: false
    kubeletDiskType: OS
    maxCount: ${USR_MAX_COUNT}
    maxPods: 30
    minCount: ${USR_MIN_COUNT}
    mode: User
    name: ${USER_POOL_NAME1}
    nodeLabels:
      kubernetes.azure.com/scalesetpriority: spot
    nodeTaints:
    - kubernetes.azure.com/scalesetpriority=spot:NoSchedule
    orchestratorVersion: "${AKS_VERSION}"
    osDiskSizeGB: ${OS_DISK_SIZE}
    osDiskType: Managed
    osSKU: ${OS_SKU}
    osType: ${OS_TYPE}
    enableCustomCATrust: ${ENABLE_CUSTOM_CA_TRUST}
    # type: VirtualMachineScaleSets
    upgradeSettings:
      maxSurge: 10%
    vmSize: ${VM_SIZE}
  apiServerAccessProfile:
    enablePrivateCluster: ${ENABLE_PRIVATE_CLUSTER} # true
    enablePrivateClusterPublicFQDN: ${ENABLE_PRIVATE_CLUSTER_FQDN} # true
    # privateDNSZone: system
  autoScalerProfile:
    balance-similar-node-groups: "false"
    expander: random
    max-empty-bulk-delete: "10"
    max-graceful-termination-sec: "600"
    max-node-provision-time: 15m
    max-total-unready-percentage: "45"
    new-pod-scale-up-delay: 0s
    ok-total-unready-count: "3"
    scale-down-delay-after-add: 10m
    scale-down-delay-after-delete: 10s
    scale-down-delay-after-failure: 3m
    scale-down-unneeded-time: 10m
    scale-down-unready-time: 20m
    scale-down-utilization-threshold: "0.5"
    scan-interval: 10s
    skip-nodes-with-local-storage: "false"
    skip-nodes-with-system-pods: "true"
  autoUpgradeProfile:
    nodeOSUpgradeChannel: ${NODE_OS_UPGRADE_CHANNEL}
    upgradeChannel: ${UPGRADE_CHANNEL}
  azureMonitorProfile:
    metrics:
      enabled: ${METRICS_ENABLED}
      kubeStateMetrics:
        metricAnnotationsAllowList: ""
        metricLabelsAllowlist: ""
  # metricsProfile:
  #   CostAnalysis:
  #     config:
  #     enabled: true
  azureName: ${CLUSTER_NAME}
  disableLocalAccounts: true
  dnsPrefix: ${CLUSTER_NAME}-dns
  enableRBAC: true
  # identity:
  #   type: SystemAssigned
  identity:
    type: UserAssigned
    userAssignedIdentities:
    - reference:
        armId: ${USER_ASSIGNED_MANAGED_IDENTITY_ID}
  # identityProfile:
  #   kubeletidentity:
  #     clientId: f0008cfa-3b57-4b98-ac00-0acdadaa5556
  #     objectId: acbe3ef4-5a51-48c0-b061-dc7915607db6
  #     resourceReference:
  #       armId: /subscriptions/133d5755-4074-4d6e-ad38-eb2a6ad12903/resourcegroups/MC_aks_danat-aks_uksouth/providers/Microsoft.ManagedIdentity/userAssignedIdentities/danat-aks-agentpool
  kubernetesVersion: "${AKS_VERSION}"
  location: ${LOCATION}
  owner:
    name: ${RESOURCE_GROUP}
  networkProfile:
    dnsServiceIP: ${DNS_SERVICE_IP}
    ipFamilies:
    - IPv4
    loadBalancerProfile:
      backendPoolType: NodeIPConfiguration
      effectiveOutboundIPs:
      - reference:
          armId: /subscriptions/133d5755-4074-4d6e-ad38-eb2a6ad12903/resourceGroups/MC_aks_danat-aks_uksouth/providers/Microsoft.Network/publicIPAddresses/8f4df275-81f5-4eae-b5d6-b0cb1265f3a9
      managedOutboundIPs:
        count: 1
    loadBalancerSku: ${LOAD_BALANCER_SKU}
    networkDataplane: ${NETWORK_DATAPLANE}
    networkPlugin: ${NETWORK_PLUGIN}
    networkPluginMode: ${NETWORK_PLUGIN_MODE}
    networkPolicy: ${NETWORK_POLICY}
    outboundType: ${OUTBOUND_TYPE}
    podCidr: ${POD_CIDR}
    # podCidrs:
    # - ${POD_CIDR}
    serviceCidr: ${SERVICE_CIDR}
    # serviceCidrs:
    # - 10.0.0.0/16
  nodeResourceGroup: ${NODE_RESOURCE_GROUP}
  oidcIssuerProfile:
    enabled: true
  privateLinkResources:
  - groupId: management
    name: management
    reference:
      armId: /subscriptions/133d5755-4074-4d6e-ad38-eb2a6ad12903/resourcegroups/aks/providers/Microsoft.ContainerService/managedClusters/danat-aks/privateLinkResources/management
    requiredMembers:
    - management
    type: Microsoft.ContainerService/managedClusters/privateLinkResources
  securityProfile:
    defender:
      logAnalyticsWorkspaceResourceReference:
        armId: ${LOG_ANALYTICS_WORKSPACE_ID}
      securityMonitoring:
        enabled: true
    imageCleaner:
      enabled: true
      intervalHours: 168
    workloadIdentity:
      enabled: true
  servicePrincipalProfile:
    clientId: ${CLIENT_ID}
  sku:
    name: ${SKU_NAME}
    tier: ${SKU_TIER}
  storageProfile:
    diskCSIDriver:
      enabled: true
    fileCSIDriver:
      enabled: true
    snapshotController:
      enabled: true
  supportPlan: KubernetesOfficial
  windowsProfile:
    adminPassword: ${ADMIN_PASSWORD}
    adminUsername: ${ADMIN_USERNAME}
    enableCSIProxy: true
    # ssh:
    # publicKeys:
    #   - keyData: yourSshPublicKey
  workloadAutoScalerProfile:
    keda:
      enabled: true
# ---
# apiVersion: containerservice.azure.com/v1api20231102preview
# kind: ManagedClustersAgentPool
# metadata:
#   creationTimestamp: null
#   name: ${CLUSTER_NAME}-${SYSTEM_POOL_NAME1}
#   namespace: ${NAMESPACE}
# spec:
#   # type: AvailabilitySet
#   # type: VirtualMachineScaleSets
#   availabilityZones:
#   - "1"
#   - "2"
#   - "3"
#   azureName: ${SYSTEM_POOL_NAME1}
#   count: ${SYS_COUNT}
#   enableAutoScaling: true
#   enableFIPS: false
#   enableNodePublicIP: false
#   kubeletDiskType: OS
#   maxCount: ${SYS_MAX_COUNT}
#   maxPods: ${SYS_MAX_PODS}
#   minCount: ${SYS_MIN_COUNT}
#   mode: System
#   nodeTaints:
#   - CriticalAddonsOnly=true:NoSchedule
#   orchestratorVersion: "${AKS_VERSION}"
#   osDiskSizeGB: ${OS_DISK_SIZE}
#   osDiskType: Managed
#   osSKU: ${OS_SKU}
#   osType: ${OS_TYPE}
#   enableCustomCATrust: ${ENABLE_CUSTOM_CA_TRUST}
#   owner:
#     name: ${RESOURCE_GROUP}
#   # type: Microsoft.ContainerService/managedClusters/agentPools
#   upgradeSettings:
#     maxSurge: 10%
#   vmSize: ${VM_SIZE}
# ---
# apiVersion: containerservice.azure.com/v1api20231102preview
# kind: ManagedClustersAgentPool
# metadata:
#   creationTimestamp: null
#   name: ${CLUSTER_NAME}-${USER_POOL_NAME1}
#   namespace: ${NAMESPACE}
# spec:
#   # type: VirtualMachineScaleSets
#   # type: AvailabilitySet
#   availabilityZones:
#   - "1"
#   - "2"
#   - "3"
#   azureName: ${USER_POOL_NAME1}
#   count: ${USR_COUNT}
#   enableAutoScaling: true
#   enableFIPS: false
#   enableNodePublicIP: false
#   kubeletDiskType: OS
#   maxCount: ${USR_MAX_COUNT}
#   maxPods: ${USR_MAX_PODS}
#   minCount: ${USR_MIN_COUNT}
#   mode: User
#   nodeLabels:
#     kubernetes.azure.com/scalesetpriority: spot
#   nodeTaints:
#   - kubernetes.azure.com/scalesetpriority=spot:NoSchedule
#   orchestratorVersion: "${AKS_VERSION}"
#   osDiskSizeGB: ${OS_DISK_SIZE}
#   osDiskType: Managed
#   osSKU: ${OS_SKU}
#   osType: ${OS_TYPE}
#   enableCustomCATrust: ${ENABLE_CUSTOM_CA_TRUST}
#   owner:
#     name: ${RESOURCE_GROUP}
#   # type: Microsoft.ContainerService/managedClusters/agentPools
#   upgradeSettings:
#     maxSurge: 10%
#   vmSize: ${VM_SIZE}
# ---
