# full name
grep -r "2023-01-02-preview" .
# regex pattern
grep -r -E "[0-9]{4}-[0-9]{2}-[0-9]{2}-preview" .

# search and replace
sed -i '' 's/2023-01-02-preview/2024-01-01/g' . # stable
sed -i '' 's/2023-01-02-preview/2024-01-02-preview/g' . # preview


#!/bin/bash

# Get the AKS credentials
az aks get-credentials --resource-group <resource-group> --name <cluster-name>

# Get all Persistent Volumes in the cluster
kubectl get pv -o json | jq -r '.items[] | select(.spec.azureDisk) | .spec.azureDisk.diskURI' | while read -r diskUri; do
    # Extract the storage account name from the disk URI
    storageAccountName=$(echo $diskUri | cut -d'/' -f3 | cut -d'.' -f1)
    echo "Storage account connected to AKS: $storageAccountName"
done

kubectl get pv -o json | jq -r '.items[] | select(.spec.csi.volumeAttributes.storageaccounts) | .spec.csi.volumeAttributes.storageaccounts'

#!/bin/bash

# Get all Persistent Volumes in the cluster
pvs=$(kubectl get pv -o json | jq -r '.items[] | select(.spec.azureDisk) | .spec.azureDisk.diskURI')

# Loop through each PV
for pv in $pvs; do
    # Run your command against the PV
    echo "Processing PV: $pv"
    # Add your command here
done


The `allowSharedKeyAccess` property in Azure Kubernetes Service (AKS) is related to Azure Storage Service. It's not a direct AKS setting, but it's used when AKS interacts with Azure Storage.

When `allowSharedKeyAccess` is set to `true`, it means that the storage account accepts authorization from Shared Key. Shared Key authorization is a method that clients can use to access Azure Storage services. It uses the account access key to sign the request.

Setting `allowSharedKeyAccess` to `false` disables Shared Key authorization for the storage account. This means that you can't use Shared Key to authorize requests to the storage account. Instead, you would need to use Azure Active Directory (Azure AD) for authorization.

This setting can enhance security by requiring Azure AD for authorization, which supports more advanced features than Shared Key, such as conditional access policies and multi-factor authentication.

However, before you set `allowSharedKeyAccess` to `false`, you should ensure that all clients that access the storage account support Azure AD authorization. If any clients only support Shared Key authorization, they won't be able to access the storage account after you disable Shared Key access.
